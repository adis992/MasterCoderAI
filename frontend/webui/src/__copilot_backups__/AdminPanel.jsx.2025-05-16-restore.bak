// BACKUP: AdminPanel.jsx as of 2025-05-16
// This is a backup of the current working version before any further design or logic changes.
import React, { useState } from 'react';
import UsersList from './UsersList';
import TasksList from './TasksList';
import ResourcesPanel from './ResourcesPanel';
import AdminSettingsPanel from './AdminSettingsPanel';
import ChatLayout from './ChatLayout';
import { AuthContext } from '../context/AuthContext';

const tabs = [
  { key: 'chat', label: 'Chat' },
  { key: 'users', label: 'Users' },
  { key: 'tasks', label: 'Tasks' },
  { key: 'resources', label: 'Resources' },
  { key: 'settings', label: 'Settings' },
];

function AdminPanel() {
  const { logout, user } = React.useContext(AuthContext);
  const [tab, setTab] = useState('chat');
  const [showSettings, setShowSettings] = useState(false);

  // Always reset to 'chat' tab on mount (fixes misalignment after login)
  React.useEffect(() => {
    setTab('chat');
  }, []);

  // On tab change, if user clicks on 'settings', redirect to /admin and show only settings tab
  React.useEffect(() => {
    if (tab === 'settings') {
      window.history.replaceState({}, '', '/admin');
    }
  }, [tab]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950 text-white flex flex-col">
      {/* Hide navbar completely when settings are open */}
      {!showSettings && (
        <nav className="w-full flex gap-2 bg-gray-800 border-b border-blue-900 px-4 py-3 sticky top-0 z-30 relative items-center shadow-lg rounded-b-xl">
          <h1 className="font-bold text-blue-400 text-2xl tracking-wide mr-8 drop-shadow">MasterCoderAI</h1>
          {tabs.map(t => (
            <button
              key={t.key}
              onClick={() => setTab(t.key)}
              className={`px-4 py-2 rounded-lg font-semibold transition-colors shadow-sm border ${tab===t.key?'bg-blue-700 text-white border-blue-400':'bg-gray-700 text-blue-200 hover:bg-blue-800 border-transparent'}`}
            >{t.label}</button>
          ))}
          <div className="flex-1"></div>
          {/* Admin Panel label moved to top right, compact, next to Logout */}
          {user && user.is_admin && (
            <>
              <span
                onClick={() => setTab('settings')}
                className="ml-2 px-3 py-1 text-xs text-blue-300 bg-gray-900 bg-opacity-80 rounded shadow-md border border-blue-800 cursor-pointer hover:bg-blue-950 transition-all whitespace-nowrap font-bold tracking-wide"
                style={{minWidth:'unset',width:'auto',maxWidth:'160px'}}
              >Admin Panel</span>
              <button
                onClick={logout}
                className="ml-4 px-4 py-2 bg-red-600 hover:bg-red-700 rounded-lg text-white font-bold shadow"
              >Logout</button>
            </>
          )}
        </nav>
      )}
      {/* Floating settings button (bottom right) only when settings are closed */}
      {!showSettings && (
        <button
          className="fixed bottom-6 right-6 z-50 bg-blue-700 hover:bg-blue-800 text-white rounded-full p-4 shadow-xl"
          onClick={() => setShowSettings(true)}
          title="Otvori postavke"
        >⚙️</button>
      )}
      {/* Main content or settings */}
      <main className="flex-1 w-full">
        {showSettings ? (
          <div className="w-full max-w-3xl mx-auto bg-gray-900 bg-opacity-90 rounded-2xl shadow-2xl min-h-[60vh] border border-blue-900 flex flex-col items-center justify-center p-8 mt-12">
            <button
              className="absolute top-8 right-8 text-2xl text-blue-300 hover:text-blue-500"
              onClick={() => setShowSettings(false)}
              title="Zatvori postavke"
            >✕</button>
            <AdminSettingsPanel />
          </div>
        ) : (
          <div className="w-full max-w-6xl bg-gray-900 bg-opacity-90 rounded-2xl shadow-2xl min-h-[70vh] border border-blue-900">
            {/* Tab content only, no extra padding */}
            {tab === 'chat' && <ChatLayout />}
            {tab === 'users' && <UsersList />}
            {tab === 'tasks' && <TasksList />}
            {tab === 'resources' && <ResourcesPanel />}
            {tab === 'settings' && <AdminSettingsPanel />}
          </div>
        )}
      </main>
    </div>
  );
}

export default AdminPanel;
